var search_data = {"index":{"searchIndex":["passivedns","cli","clinterface","client","pdnsqueueentry","pdnsresult","pdnstoolstate","pdnstoolstatedb","passivedb","provider","bfk","circl","cn360","circl","dnsdb","mnemonic","passivetotal","riskiq","tcpiputils","virustotal","add_query()","add_query()","add_result()","add_result()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","config_section_name()","create_state()","create_state()","create_tables()","debug=()","each_query()","each_query()","format_recs()","get_letter_map()","get_letter_map()","get_state()","get_state()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_result()","next_result()","option_letter()","option_letter()","option_letter()","option_letter()","option_letter()","option_letter()","option_letter()","option_letter()","option_letter()","option_letter()","option_letter()","parse()","parse_command_line()","parse_command_line()","parse_json()","parse_json()","parse_json()","parse_json()","parse_json()","parse_json()","parse_json()","parse_json()","pdnslookup()","pdnslookup()","query()","results_to_s()","results_to_s()","run()","run()","to_gdf()","to_graphml()","to_graphviz()","to_json()","to_s()","to_xml()","to_yaml()","update_query()","update_query()","usage()","usage()","readme"],"longSearchIndex":["passivedns","passivedns::cli","passivedns::clinterface","passivedns::client","passivedns::pdnsqueueentry","passivedns::pdnsresult","passivedns::pdnstoolstate","passivedns::pdnstoolstatedb","passivedns::passivedb","passivedns::provider","passivedns::provider::bfk","passivedns::provider::circl","passivedns::provider::cn360","passivedns::provider::circl","passivedns::provider::dnsdb","passivedns::provider::mnemonic","passivedns::provider::passivetotal","passivedns::provider::riskiq","passivedns::provider::tcpiputils","passivedns::provider::virustotal","passivedns::pdnstoolstate#add_query()","passivedns::pdnstoolstatedb#add_query()","passivedns::pdnstoolstate#add_result()","passivedns::pdnstoolstatedb#add_result()","passivedns::passivedb::config_section_name()","passivedns::provider::bfk::config_section_name()","passivedns::provider::cn360::config_section_name()","passivedns::provider::circl::config_section_name()","passivedns::provider::circl::config_section_name()","passivedns::provider::dnsdb::config_section_name()","passivedns::provider::mnemonic::config_section_name()","passivedns::provider::passivetotal::config_section_name()","passivedns::provider::riskiq::config_section_name()","passivedns::provider::tcpiputils::config_section_name()","passivedns::provider::virustotal::config_section_name()","passivedns::clinterface::create_state()","passivedns::clinterface::create_state()","passivedns::pdnstoolstatedb#create_tables()","passivedns::client#debug=()","passivedns::pdnstoolstate#each_query()","passivedns::pdnstoolstatedb#each_query()","passivedns::provider::tcpiputils#format_recs()","passivedns::clinterface::get_letter_map()","passivedns::clinterface::get_letter_map()","passivedns::pdnstoolstate#get_state()","passivedns::pdnstoolstatedb#get_state()","passivedns::passivedb#lookup()","passivedns::provider::bfk#lookup()","passivedns::provider::cn360#lookup()","passivedns::provider::circl#lookup()","passivedns::provider::circl#lookup()","passivedns::provider::dnsdb#lookup()","passivedns::provider::mnemonic#lookup()","passivedns::provider::passivetotal#lookup()","passivedns::provider::riskiq#lookup()","passivedns::provider::tcpiputils#lookup()","passivedns::provider::virustotal#lookup()","passivedns::passivedb::name()","passivedns::provider::bfk::name()","passivedns::provider::cn360::name()","passivedns::provider::circl::name()","passivedns::provider::circl::name()","passivedns::provider::dnsdb::name()","passivedns::provider::mnemonic::name()","passivedns::provider::passivetotal::name()","passivedns::provider::riskiq::name()","passivedns::provider::tcpiputils::name()","passivedns::provider::virustotal::name()","passivedns::client::new()","passivedns::pdnstoolstate::new()","passivedns::pdnstoolstatedb::new()","passivedns::provider::bfk::new()","passivedns::provider::cn360::new()","passivedns::provider::circl::new()","passivedns::provider::circl::new()","passivedns::provider::dnsdb::new()","passivedns::provider::mnemonic::new()","passivedns::provider::passivetotal::new()","passivedns::provider::riskiq::new()","passivedns::provider::tcpiputils::new()","passivedns::provider::virustotal::new()","passivedns::pdnstoolstate#next_result()","passivedns::pdnstoolstatedb#next_result()","passivedns::passivedb::option_letter()","passivedns::provider::bfk::option_letter()","passivedns::provider::cn360::option_letter()","passivedns::provider::circl::option_letter()","passivedns::provider::circl::option_letter()","passivedns::provider::dnsdb::option_letter()","passivedns::provider::mnemonic::option_letter()","passivedns::provider::passivetotal::option_letter()","passivedns::provider::riskiq::option_letter()","passivedns::provider::tcpiputils::option_letter()","passivedns::provider::virustotal::option_letter()","passivedns::provider::bfk#parse()","passivedns::clinterface::parse_command_line()","passivedns::clinterface::parse_command_line()","passivedns::provider::cn360#parse_json()","passivedns::provider::circl#parse_json()","passivedns::provider::circl#parse_json()","passivedns::provider::dnsdb#parse_json()","passivedns::provider::mnemonic#parse_json()","passivedns::provider::passivetotal#parse_json()","passivedns::provider::riskiq#parse_json()","passivedns::provider::virustotal#parse_json()","passivedns::clinterface::pdnslookup()","passivedns::clinterface::pdnslookup()","passivedns::client#query()","passivedns::clinterface::results_to_s()","passivedns::clinterface::results_to_s()","passivedns::clinterface::run()","passivedns::clinterface::run()","passivedns::pdnstoolstate#to_gdf()","passivedns::pdnstoolstate#to_graphml()","passivedns::pdnstoolstate#to_graphviz()","passivedns::pdnstoolstate#to_json()","passivedns::pdnstoolstate#to_s()","passivedns::pdnstoolstate#to_xml()","passivedns::pdnstoolstate#to_yaml()","passivedns::pdnstoolstate#update_query()","passivedns::pdnstoolstatedb#update_query()","passivedns::clinterface::usage()","passivedns::clinterface::usage()",""],"info":[["PassiveDNS","","PassiveDNS.html","",""],["PassiveDNS::CLI","","PassiveDNS/CLI.html","","<p>Handles all the command-line parsing, state tracking, and dispatching\nqueries to the PassiveDNS::Client …\n"],["PassiveDNS::CLInterface","","PassiveDNS/CLInterface.html","","<p>Handles all the command-line parsing, state tracking, and dispatching\nqueries to the PassiveDNS::Client …\n"],["PassiveDNS::Client","","PassiveDNS/Client.html","","<p>coodinates the lookups accross all configured PassiveDNS providers\n<p>coodinates the lookups accross all …\n"],["PassiveDNS::PDNSQueueEntry","","PassiveDNS/PDNSQueueEntry.html","","<p>struct to hold pending entries for query\n"],["PassiveDNS::PDNSResult","","PassiveDNS/PDNSResult.html","","<p>struct to contain the results from a PassiveDNS lookup\n"],["PassiveDNS::PDNSToolState","","PassiveDNS/PDNSToolState.html","","<p>holds state in memory of the queue to be queried, records returned, and the\nlevel of recursion\n"],["PassiveDNS::PDNSToolStateDB","","PassiveDNS/PDNSToolStateDB.html","","<p>creates persistence to the tool state by leveraging SQLite3\n"],["PassiveDNS::PassiveDB","","PassiveDNS/PassiveDB.html","","<p>abstract class that all PassiveDNS::Provider should subclass\n"],["PassiveDNS::Provider","","PassiveDNS/Provider.html","","<p>The Provider module contains all the Passive DNS provider client code\n<p>The Provider module contains all …\n"],["PassiveDNS::Provider::BFK","","PassiveDNS/Provider/BFK.html","","<p>Queries BFK.de&#39;s passive DNS database\n"],["PassiveDNS::Provider::CIRCL","","PassiveDNS/Provider/Circl.html","","<p>Queries CIRCL.LU&#39;s passive DNS database Circl is aliased by CIRCL\n"],["PassiveDNS::Provider::CN360","","PassiveDNS/Provider/CN360.html","","<p>Queries 360.cn&#39;s passive DNS database\n"],["PassiveDNS::Provider::Circl","","PassiveDNS/Provider/Circl.html","","<p>Queries CIRCL.LU&#39;s passive DNS database Circl is aliased by CIRCL\n"],["PassiveDNS::Provider::DNSDB","","PassiveDNS/Provider/DNSDB.html","","<p>Queries FarSight&#39;s passive DNS database\n"],["PassiveDNS::Provider::Mnemonic","","PassiveDNS/Provider/Mnemonic.html","","<p>Queries Mnemonic&#39;s passive DNS database\n"],["PassiveDNS::Provider::PassiveTotal","","PassiveDNS/Provider/PassiveTotal.html","","<p>Queries PassiveTotal&#39;s passive DNS database\n"],["PassiveDNS::Provider::RiskIQ","","PassiveDNS/Provider/RiskIQ.html","","<p>Queries RiskIQ&#39;s passive DNS database\n"],["PassiveDNS::Provider::TCPIPUtils","","PassiveDNS/Provider/TCPIPUtils.html","","<p>Queries TCPIPUtils&#39;s passive DNS database\n"],["PassiveDNS::Provider::VirusTotal","","PassiveDNS/Provider/VirusTotal.html","","<p>Queries VirusTotal&#39;s passive DNS database\n"],["add_query","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-add_query","(query,state,level=@level+1)","<p>adding a query to the queue of things to be queried, but only if the query\nisn&#39;t already queued or …\n"],["add_query","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-i-add_query","(query,state,level=@level+1)","<p>adding a query to the queue of things to be queried, but only if the query\nisn&#39;t already queued or …\n"],["add_result","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-add_result","(res)","<p>adds the record to the list of records received and tries to add the answer\nand query back to the queue …\n"],["add_result","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-i-add_result","(res)","<p>adds the record to the list of records received and tries to add the answer\nand query back to the queue …\n"],["config_section_name","PassiveDNS::PassiveDB","PassiveDNS/PassiveDB.html#method-c-config_section_name","()","<p>raises an exception that this should be implemented by the subclass\n"],["config_section_name","PassiveDNS::Provider::BFK","PassiveDNS/Provider/BFK.html#method-c-config_section_name","()","<p>Sets the configuration section name to “bfk”\n"],["config_section_name","PassiveDNS::Provider::CN360","PassiveDNS/Provider/CN360.html#method-c-config_section_name","()","<p>Sets the configuration section name to “cn360”\n"],["config_section_name","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-config_section_name","()","<p>Sets the configuration section name to “circl”\n"],["config_section_name","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-config_section_name","()","<p>Sets the configuration section name to “circl”\n"],["config_section_name","PassiveDNS::Provider::DNSDB","PassiveDNS/Provider/DNSDB.html#method-c-config_section_name","()","<p>Sets the configuration section name to “dnsdb”\n"],["config_section_name","PassiveDNS::Provider::Mnemonic","PassiveDNS/Provider/Mnemonic.html#method-c-config_section_name","()","<p>Sets the configuration section name to “mnemonic”\n"],["config_section_name","PassiveDNS::Provider::PassiveTotal","PassiveDNS/Provider/PassiveTotal.html#method-c-config_section_name","()","<p>Sets the configuration section name to “passivetotal”\n"],["config_section_name","PassiveDNS::Provider::RiskIQ","PassiveDNS/Provider/RiskIQ.html#method-c-config_section_name","()","<p>Sets the configuration section name to “riskiq”\n"],["config_section_name","PassiveDNS::Provider::TCPIPUtils","PassiveDNS/Provider/TCPIPUtils.html#method-c-config_section_name","()","<p>Sets the configuration section name to “tcpiputils”\n"],["config_section_name","PassiveDNS::Provider::VirusTotal","PassiveDNS/Provider/VirusTotal.html#method-c-config_section_name","()","<p>Sets the configuration section name to “virustotal”\n"],["create_state","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-create_state","(sqlitedb=nil)","<p>create a state instance\n"],["create_state","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-create_state","(sqlitedb=nil)","<p>create a state instance\n"],["create_tables","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-i-create_tables","()","<p>creates the sqlite3 tables needed to track the state of this tool as\nitqueries and recurses\n"],["debug=","PassiveDNS::Client","PassiveDNS/Client.html#method-i-debug-3D","(d)","<p>set the debug flag\n"],["each_query","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-each_query","(max_level=20)","<p>returns each query waiting on the queue\n"],["each_query","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-i-each_query","(max_level=20)","<p>returns each query waiting on the queue\n"],["format_recs","PassiveDNS::Provider::TCPIPUtils","PassiveDNS/Provider/TCPIPUtils.html#method-i-format_recs","(reply_data, question, delta)","<p>translates the data structure derived from of tcpiputils&#39;s JSON reply\n"],["get_letter_map","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-get_letter_map","()","<p>generates a mapping between the option letter for each PassiveDNS provider\nand the class\n"],["get_letter_map","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-get_letter_map","()","<p>generates a mapping between the option letter for each PassiveDNS provider\nand the class\n"],["get_state","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-get_state","(query)","<p>returns the state of a provided query\n"],["get_state","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-i-get_state","(query)","<p>returns each query waiting on the queue\n"],["lookup","PassiveDNS::PassiveDB","PassiveDNS/PassiveDB.html#method-i-lookup","(label, limit=nil)","<p>raises an exception that this should be implemented by the subclass\n"],["lookup","PassiveDNS::Provider::BFK","PassiveDNS/Provider/BFK.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::CN360","PassiveDNS/Provider/CN360.html#method-i-lookup","(label, limit=10000)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::DNSDB","PassiveDNS/Provider/DNSDB.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::Mnemonic","PassiveDNS/Provider/Mnemonic.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::PassiveTotal","PassiveDNS/Provider/PassiveTotal.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::RiskIQ","PassiveDNS/Provider/RiskIQ.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::TCPIPUtils","PassiveDNS/Provider/TCPIPUtils.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["lookup","PassiveDNS::Provider::VirusTotal","PassiveDNS/Provider/VirusTotal.html#method-i-lookup","(label, limit=nil)","<p>Takes a label (either a domain or an IP address) and returns an array of\nPassiveDNS::PDNSResult instances …\n"],["name","PassiveDNS::PassiveDB","PassiveDNS/PassiveDB.html#method-c-name","()","<p>raises an exception that this should be implemented by the subclass\n"],["name","PassiveDNS::Provider::BFK","PassiveDNS/Provider/BFK.html#method-c-name","()","<p>Sets the modules self-reported name to “BFK.de”\n"],["name","PassiveDNS::Provider::CN360","PassiveDNS/Provider/CN360.html#method-c-name","()","<p>Sets the modules self-reported name to “360.cn”\n"],["name","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-name","()","<p>Sets the modules self-reported name to “CIRCL”\n"],["name","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-name","()","<p>Sets the modules self-reported name to “CIRCL”\n"],["name","PassiveDNS::Provider::DNSDB","PassiveDNS/Provider/DNSDB.html#method-c-name","()","<p>Sets the modules self-reported name to “DNSDB”\n"],["name","PassiveDNS::Provider::Mnemonic","PassiveDNS/Provider/Mnemonic.html#method-c-name","()","<p>Sets the modules self-reported name to “Mnemonic”\n"],["name","PassiveDNS::Provider::PassiveTotal","PassiveDNS/Provider/PassiveTotal.html#method-c-name","()","<p>Sets the modules self-reported name to “PassiveTotal”\n"],["name","PassiveDNS::Provider::RiskIQ","PassiveDNS/Provider/RiskIQ.html#method-c-name","()","<p>Sets the modules self-reported name to “RiskIQ”\n"],["name","PassiveDNS::Provider::TCPIPUtils","PassiveDNS/Provider/TCPIPUtils.html#method-c-name","()","<p>Sets the modules self-reported name to “TCPIPUtils”\n"],["name","PassiveDNS::Provider::VirusTotal","PassiveDNS/Provider/VirusTotal.html#method-c-name","()","<p>Sets the modules self-reported name to “VirusTotal”\n"],["new","PassiveDNS::Client","PassiveDNS/Client.html#method-c-new","(pdns=$passivedns_providers, configfile=\"#{ENV['HOME']}/.passivedns-client\")","<p>instantiate and configure all specified PassiveDNS providers pdns       \narray of passivedns provider …\n"],["new","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-c-new","()","<p>creates a new, blank PDNSToolState instance\n"],["new","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-c-new","(sqlitedb=nil)","<p>creates an SQLite3-based Passive DNS Client state only argument is the\nfilename of the sqlite3 database …\n"],["new","PassiveDNS::Provider::BFK","PassiveDNS/Provider/BFK.html#method-c-new","(options={})","<p>Options\n<p>:debug     Sets the debug flag for the module\n<p>“URL”      Alternate url for testing.  …\n"],["new","PassiveDNS::Provider::CN360","PassiveDNS/Provider/CN360.html#method-c-new","(options={})","<p>Options\n<p>:debug       Sets the debug flag for the module\n<p>“API”        REQUIRED: some.web.address.for.their.api …\n"],["new","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-new","(options={})","<p>You should either have a username+password or an authorization token to use\nthis service\n<p>Example Instantiation …\n"],["new","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-new","(options={})","<p>You should either have a username+password or an authorization token to use\nthis service\n<p>Example Instantiation …\n"],["new","PassiveDNS::Provider::DNSDB","PassiveDNS/Provider/DNSDB.html#method-c-new","(options={})","<p>Options\n<p>:debug       Sets the debug flag for the module\n<p>“APIKEY”     REQUIRED: The API key associated …\n"],["new","PassiveDNS::Provider::Mnemonic","PassiveDNS/Provider/Mnemonic.html#method-c-new","(options={})","<p>Options\n<p>:debug       Sets the debug flag for the module\n<p>“APIKEY”     REQUIRED: The API key associated …\n"],["new","PassiveDNS::Provider::PassiveTotal","PassiveDNS/Provider/PassiveTotal.html#method-c-new","(options={})","<p>Options\n<p>:debug       Sets the debug flag for the module\n<p>“APIKEY”     REQUIRED: The API key associated …\n"],["new","PassiveDNS::Provider::RiskIQ","PassiveDNS/Provider/RiskIQ.html#method-c-new","(options={})","<p>Options\n<p>:debug            Sets the debug flag for the module\n<p>“API_TOKEN”       REQUIRED: User …\n"],["new","PassiveDNS::Provider::TCPIPUtils","PassiveDNS/Provider/TCPIPUtils.html#method-c-new","(options={})","<p>Options\n<p>:debug       Sets the debug flag for the module\n<p>“APIKEY”     REQUIRED: The API key associated …\n"],["new","PassiveDNS::Provider::VirusTotal","PassiveDNS/Provider/VirusTotal.html#method-c-new","(options={})","<p>Options\n<p>:debug     Sets the debug flag for the module\n<p>“APIKEY”   Mandatory.  API Key associated …\n"],["next_result","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-next_result","()","<p>returns the next record\n"],["next_result","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-i-next_result","()","<p>returns the next record\n"],["option_letter","PassiveDNS::PassiveDB","PassiveDNS/PassiveDB.html#method-c-option_letter","()","<p>raises an exception that this should be implemented by the subclass\n"],["option_letter","PassiveDNS::Provider::BFK","PassiveDNS/Provider/BFK.html#method-c-option_letter","()","<p>Sets the command line database argument to “b”\n"],["option_letter","PassiveDNS::Provider::CN360","PassiveDNS/Provider/CN360.html#method-c-option_letter","()","<p>Sets the command line database argument to “3”\n"],["option_letter","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-option_letter","()","<p>Sets the command line database argument to “c”\n"],["option_letter","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-c-option_letter","()","<p>Sets the command line database argument to “c”\n"],["option_letter","PassiveDNS::Provider::DNSDB","PassiveDNS/Provider/DNSDB.html#method-c-option_letter","()","<p>Sets the command line database argument to “d”\n"],["option_letter","PassiveDNS::Provider::Mnemonic","PassiveDNS/Provider/Mnemonic.html#method-c-option_letter","()","<p>Sets the command line database argument to “m”\n"],["option_letter","PassiveDNS::Provider::PassiveTotal","PassiveDNS/Provider/PassiveTotal.html#method-c-option_letter","()","<p>Sets the command line database argument to “p”\n"],["option_letter","PassiveDNS::Provider::RiskIQ","PassiveDNS/Provider/RiskIQ.html#method-c-option_letter","()","<p>Sets the command line database argument to “r”\n"],["option_letter","PassiveDNS::Provider::TCPIPUtils","PassiveDNS/Provider/TCPIPUtils.html#method-c-option_letter","()","<p>Sets the command line database argument to “t”\n"],["option_letter","PassiveDNS::Provider::VirusTotal","PassiveDNS/Provider/VirusTotal.html#method-c-option_letter","()","<p>Sets the command line database argument to “v”\n"],["parse","PassiveDNS::Provider::BFK","PassiveDNS/Provider/BFK.html#method-i-parse","(page,response_time)","<p>parses the webpage returned by BFK to generate an array of PDNSResult\n"],["parse_command_line","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-parse_command_line","(args)","<p>parses the command line and yields an options hash\n<p>Default Options\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">options</span> = {\n  :<span class=\"ruby-identifier\">pdnsdbs</span> =<span class=\"ruby-operator\">&gt;</span> [],     <span class=\"ruby-comment\"># ...</span>\n</pre>\n"],["parse_command_line","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-parse_command_line","(args)","<p>parses the command line and yields an options hash\n<p>Default Options\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">options</span> = {\n  :<span class=\"ruby-identifier\">pdnsdbs</span> =<span class=\"ruby-operator\">&gt;</span> [],     <span class=\"ruby-comment\"># ...</span>\n</pre>\n"],["parse_json","PassiveDNS::Provider::CN360","PassiveDNS/Provider/CN360.html#method-i-parse_json","(page,query,response_time=0)","<p>parses the response of 360.cn&#39;s JSON reply to generate an array of\nPDNSResult\n"],["parse_json","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-i-parse_json","(page,query,response_time=0)","<p>parses the response of circl&#39;s JSON reply to generate an array of\nPDNSResult\n"],["parse_json","PassiveDNS::Provider::Circl","PassiveDNS/Provider/Circl.html#method-i-parse_json","(page,query,response_time=0)","<p>parses the response of circl&#39;s JSON reply to generate an array of\nPDNSResult\n"],["parse_json","PassiveDNS::Provider::DNSDB","PassiveDNS/Provider/DNSDB.html#method-i-parse_json","(page,response_time)","<p>parses the response of DNSDB&#39;s JSON reply to generate an array of\nPDNSResult\n"],["parse_json","PassiveDNS::Provider::Mnemonic","PassiveDNS/Provider/Mnemonic.html#method-i-parse_json","(page,query,response_time=0)","<p>parses the response of mnemonic&#39;s JSON reply to generate an array of\nPDNSResult\n"],["parse_json","PassiveDNS::Provider::PassiveTotal","PassiveDNS/Provider/PassiveTotal.html#method-i-parse_json","(page,query,response_time=0)","<p>parses the response of passivetotals&#39;s JSON reply to generate an array\nof PDNSResult\n"],["parse_json","PassiveDNS::Provider::RiskIQ","PassiveDNS/Provider/RiskIQ.html#method-i-parse_json","(page,query,response_time=0)","<p>parses the response of riskiq&#39;s JSON reply to generate an array of\nPDNSResult\n"],["parse_json","PassiveDNS::Provider::VirusTotal","PassiveDNS/Provider/VirusTotal.html#method-i-parse_json","(page,query,response_time=0)","<p>parses the response of virustotal&#39;s JSON reply to generate an array of\nPDNSResult\n"],["pdnslookup","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-pdnslookup","(state, pdnsclient, options)","<p>performs a stateful, recursive (if desired) passive DNS lookup against all\nspecified providers\n"],["pdnslookup","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-pdnslookup","(state, pdnsclient, options)","<p>performs a stateful, recursive (if desired) passive DNS lookup against all\nspecified providers\n"],["query","PassiveDNS::Client","PassiveDNS/Client.html#method-i-query","(item, limit=nil)","<p>perform the query lookup accross all configured PassiveDNS providers\n"],["results_to_s","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-results_to_s","(state,options)","<p>returns a string transforming all the PassiveDNS::PDNSResult stored in the\nstate object into text/xml/json/etc. …\n"],["results_to_s","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-results_to_s","(state,options)","<p>returns a string transforming all the PassiveDNS::PDNSResult stored in the\nstate object into text/xml/json/etc. …\n"],["run","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-run","(args)","<p>main method, takes command-line arguments and performs the desired queries\nand outputs\n"],["run","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-run","(args)","<p>main method, takes command-line arguments and performs the desired queries\nand outputs\n"],["to_gdf","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-to_gdf","()","<p>transforms a set of results into GDF syntax\n"],["to_graphml","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-to_graphml","()","<p>transforms a set of results into graphml syntax\n"],["to_graphviz","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-to_graphviz","()","<p>transforms a set of results into graphviz syntax\n"],["to_json","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-to_json","()","<p>transforms a set of results into JSON\n"],["to_s","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-to_s","(sep=\"\\t\")","<p>transforms a set of results into a text string\n"],["to_xml","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-to_xml","()","<p>transforms a set of results into XML\n"],["to_yaml","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-to_yaml","()","<p>transforms a set of results into YAML\n"],["update_query","PassiveDNS::PDNSToolState","PassiveDNS/PDNSToolState.html#method-i-update_query","(query,state)","<p>sets the state of a given query\n"],["update_query","PassiveDNS::PDNSToolStateDB","PassiveDNS/PDNSToolStateDB.html#method-i-update_query","(query,state)","<p>sets the state of a given query\n"],["usage","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-usage","(letter_map)","<p>returns a string containing the usage information takes in a hash of letter\nto passive dns providers …\n"],["usage","PassiveDNS::CLInterface","PassiveDNS/CLInterface.html#method-c-usage","(letter_map)","<p>returns a string containing the usage information takes in a hash of letter\nto passive dns providers …\n"],["README","","README_md.html","","<p>PassiveDNS::Client\n<p>This rubygem queries the following Passive DNS databases:\n<p>BFK.de\n"]]}}